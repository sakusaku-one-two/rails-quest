<div class="auth-page">
  <div class="container page">
    <div class="row">
      <div class="col-md-6 offset-md-3 col-xs-12">
        <h1 class="text-xs-center">Sign in</h1>
        <p class="text-xs-center">
          <a href="/register">Need an account?</a>
        </p>

        <ul class="error-messages">
          <li>That email is already taken</li>
        </ul>

        <%= form_with url: login_path, local: true, id: "login-form" do |form| %>
          <fieldset class="form-group">
            <%= form.email_field :email, class: "form-control form-control-lg", placeholder: "Email" %>
          </fieldset>
          <fieldset class="form-group">
            <%= form.password_field :password, class: "form-control form-control-lg", placeholder: "Password" %>
          </fieldset>
          <%= form.submit "Sign in", class: "btn btn-lg btn-primary pull-xs-right" %>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded",function() {
    const loginForm = document.getElementById("login-form");
    if (loginForm) {
        loginForm.addEventListener("submit",async (event) =>{
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            const data = {
                email: formData.get("email"),
                password: formData.get("password")
            };

            const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
                alert(JSON.stringify(data))
                await fetch(form.action,{
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "Accept": "application/json",
                        "X-CSRF-Token": csrfToken
                    },
                    body: JSON.stringify(data)
                }).then(response => {
                    if (!response.ok){
                        
                        throw new Error('認証失敗しました。');
                    }
                    return response.json();
                }).then(data => {
                    
                    document.cookie = `jwt=${data.jwt}; path=/; HttpOnly`;
                    window.location.href = "/home";
                }).catch(error => {
                    alert("ログイン失敗しました。再度やり直してください。")
                });

            
        })
    }
})
</script>


